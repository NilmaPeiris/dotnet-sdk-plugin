# Base Builder Class
DotNet.DefaultSDK=(Défaut)
DotNet.ExecutionFailed=L'exécution de la commande a échoué
DotNet.NoWorkspace=Aucun espace de travail disponible
DotNet.ScriptCreationFailed=La création du script de commande a échoué
DotNet.ScriptDeletionFailed=La suppression du script de commande ({0}) a échoué
DotNet.ToolConfigurationNeeded=; veuillez considérer la définition des SDK .NET comme des outils globaux dans Jenkins
DotNet.ToolSelectionNeeded=; veuillez sélectionner un SDK .NET spécifique à utiliser
DotNet.Verbosity.Quiet=Silencieux (q)
DotNet.Verbosity.Minimal=Minimale (m)
DotNet.Verbosity.Normal=Normale (n)
DotNet.Verbosity.Detailed=Detaillé (d)
DotNet.Verbosity.Diagnostic=Diagnostique (diag)

# Builder: Build Project
DotNetBuild.DisplayName=.NET: Générer un projet (build)

# Builder: Clean Project Output
DotNetClean.DisplayName=.NET: Nettoyer la sortie d'un projet (clean)

# Builder: Show Dependencies
DotNetListPackage.DisplayName=.NET: Afficher les dépendances (list package)

# Builder: Create Package
DotNetPack.DisplayName=.NET: Créer un package NuGet (pack)

# Builder: Restore Project Dependencies
DotNetRestore.DisplayName=.NET: Restaurer les dépendances (restore)

# Global Tool: .NET SDK
DotNetSDK.DisplayName=SDK .NET
DotNetSDK.ExecutableNotFound=Impossible de trouver l'exécutable dotnet pour le SDK «{0}»
DotNetSDK.NoNode=Impossible de trouver l'exécutable dotnet car le nœud semble être hors ligne
DotNetSDK.UnknownSDK=Aucun SDK .NET trouvé nommé «{0}»

# Builder: Run Tests
DotNetTest.DisplayName=.NET: Exécuter des tests unitaires (test)

# Build Wrappper
DotNetWrapper.DisplayName=Utiliser .NET
DotNetWrapper.NoSDK=Aucun SDK .NET spécifié
