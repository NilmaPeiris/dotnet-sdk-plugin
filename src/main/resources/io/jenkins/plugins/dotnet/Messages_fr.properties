# Global Tool: .NET SDK
DotNetSDK.DisplayName=SDK .NET
DotNetSDK.ExecutableNotFound=Impossible de trouver l'exécutable dotnet pour le SDK ‘{0}’
DotNetSDK.NoNode=Impossible de trouver l'exécutable dotnet car le nœud semble être hors ligne
DotNetSDK.UnknownSDK=Aucun SDK .NET trouvé nommé ‘{0}’

# Build Wrappper
DotNetWrapper.DisplayName=Utiliser .NET
DotNetWrapper.NoSDK=Aucun SDK .NET spécifié

# Base Builder Class
DotNet.DefaultSDK=(Défaut)
DotNet.ExecutionFailed=Command execution failed
DotNet.NoWorkspace=Aucun espace de travail disponible
DotNet.ToolConfigurationNeeded=; veuillez considérer la définition des SDK .NET comme des outils globaux dans Jenkins
DotNet.ToolSelectionNeeded=; veuillez sélectionner un SDK .NET spécifique à utiliser
DotNet.Verbosity.Quiet=Silencieux (q)
DotNet.Verbosity.Minimal=Minimale (m)
DotNet.Verbosity.Normal=Normale (n)
DotNet.Verbosity.Detailed=Detaillé (d)
DotNet.Verbosity.Diagnostic=Diagnostique (diag)

# Builder: Build Project
DotNetBuild.DisplayName=Générer un projet (.NET)

# Builder: Clean Project Output
DotNetClean.DisplayName=Clean Project Output (.NET)

# Builder: Create Package
DotNetPack.DisplayName=Créer un package NuGet (.NET)

# Builder: Run Tests
DotNetTest.DisplayName=Exécuter des tests unitaires (.NET)
