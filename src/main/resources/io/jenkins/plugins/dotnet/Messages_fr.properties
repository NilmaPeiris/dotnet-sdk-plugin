# Console Output Scanner
DiagnosticScanner.CompletionMessage=Commande .NET complétée - <!>Code de sortie: {0}
DiagnosticScanner.CompletionMessageFailed=L’écriture du message d’achèvement a échoué

# Base Builder Class
DotNet.DefaultSDK=(Défaut)
DotNet.ExecutionFailed=L’exécution de la commande a échoué
DotNet.MoreOptions=Options additionelles
DotNet.NoWorkspace=Aucun espace de travail disponible
DotNet.Verbosity.Default=(Défaut)
DotNet.Verbosity.Quiet=Silencieux (q)
DotNet.Verbosity.Minimal=Minimale (m)
DotNet.Verbosity.Normal=Normale (n)
DotNet.Verbosity.Detailed=Detaillé (d)
DotNet.Verbosity.Diagnostic=Diagnostique (diag)

# Builder: Build Project
DotNetBuild.DisplayName=.NET: Générer un projet (build)

# Builder: Clean Project Output
DotNetClean.DisplayName=.NET: Nettoyer la sortie d’un projet (clean)

# Builder: Show Package Dependencies
DotNetListPackage.DisplayName=.NET: Afficher les dépendances (list package)
DotNetListPackage.EitherDeprecatedOrOutdated=Impossible d’afficher les paquets rappelés et désuets en même temps
DotNetListPackage.OnlyForPackageUpdateSearch=N’utilisé que pendant l’affichage des paquets rappelés ou désuets

# Builder: Create Package
DotNetPack.DisplayName=.NET: Créer un package NuGet (pack)

# Builder: Publish
DotNetPublish.DisplayName=.NET: Publier un projet (publish)
DotNetPublish.No=Non
DotNetPublish.ProjectDefault=(Défaut du projet)
DotNetPublish.Yes=Oui

# Builder: Restore Project Dependencies
DotNetRestore.DisplayName=.NET: Restaurer les dépendances (restore)

# Global Tool: .NET SDK
DotNetSDK.DisplayName=SDK .NET
DotNetSDK.GlobalJson.CreationDone=Création de «global.json» pour forcer la version exacte «{1}» pour SDK .NET «{0}».
DotNetSDK.GlobalJson.CreationFailed=Échec à créer «global.json» pour forcer la version exacte «{1}» pour SDK .NET «{0}»: {2}
DotNetSDK.GlobalJson.DeletionDone=Fichier «{0}» a été supprimé.
DotNetSDK.GlobalJson.DeletionFailed=Échec de la suppression du fichier «{0}»: {1}
DotNetSDK.GlobalJson.MultiSdk=Le répertoire d’installation contient plusieurs arborescences SDK (y compris «{0}» et «{1}»).
DotNetSDK.GlobalJson.NoHome=Pas de répertoire d’installation disponible.
DotNetSDK.GlobalJson.NoSdk=Le répertoire d’installation n’a pas de sous-répertoire «sdk».
DotNetSDK.GlobalJson.NoVersion=Impossible de déterminer la version exacte pour SDK .NET «{0}»: {1}
DotNetSDK.Home.NoExecutable=Aucun programme «dotnet» n’est présent
DotNetSDK.Home.NotExecutable=Un programme «dotnet» est présent mais il n’est pas exécutable
DotNetSDK.Home.NoSdkSubdir=Aucun sous-répertoire «sdk» n’est présent
DotNetSDK.Home.NoSharedNetCoreSubdir=Aucun sous-répertoire «shared/Microsoft.NETCore.App» n’est présent
DotNetSDK.NoExecutable=Impossible de trouver l’exécutable «{1}» pour le SDK «{0}»
DotNetSDK.NoHome=Pas de répertoire d’installation disponible pour SDK .NET «{0}»
DotNetSDK.NoNode=Impossible de trouver l’exécutable «dotnet» car le nœud semble être hors ligne
DotNetSDK.UnknownSDK=Aucun SDK .NET trouvé nommé «{0}»

# Tool Installer: .NET SDK Installer
DotNetSDKInstaller.DisplayName=Installer à partir de microsoft.com
DotNetSDKInstaller.Installing=Téléchargement et extraction de {0} en {1} sur {2}...
DotNetSDKInstaller.InvalidPlatform=Pas une plate-forme valide pour SDK {2} de {0}, release {1}
DotNetSDKInstaller.InvalidRelease="«{0}» n’est pas un release valide pour {1}
DotNetSDKInstaller.InvalidSdk=«{0}» n’est pas un SDK valide pour {1}, release {2}
DotNetSDKInstaller.InvalidVersion=«{0}» n’est pas une version .NET valide
DotNetSDKInstaller.NotSelected=(Aucune sélection faite)
DotNetSDKInstaller.ReleaseRequired=Sélectionnez d’abord un release
DotNetSDKInstaller.Required=Une sélection est requise
DotNetSDKInstaller.SdkRequired=Sélectionnez d’abord un SDK
DotNetSDKInstaller.VersionRequired=Sélectionnez d’abord une version .NET

# Builder: Run Tests
DotNetTest.BadRunSettings=Échec à charger les arguments RunSettings configurés.
DotNetTest.DisplayName=.NET: Exécuter des tests unitaires (test)
DotNetTest.InvalidRunSettings=Spécification incorrecte des arguments RunSettings

# Base Builder: MSBuild
DotNetUsingMSBuild.BadProperties=Échec à charger les propriétés MSBuild configurées.
DotNetUsingMSBuild.InvalidProperties=Spécification incorrecte des propriétés MSBuild

# Build Wrappper
DotNetWrapper.DisplayName=Utiliser .NET
DotNetWrapper.NoSDK=Aucun SDK .NET spécifié

# Data: Downloads
Downloads.NoSdks=Aucune information disponible sur les SDKs .NET
Downloads.NoVersions=Aucune information disponible sur les versions .NET
Downloads.Package.DirectDownloadLink=<a href="{0}">Téléchargement direct</a>
Downloads.Package.DisplayName={0} ({1})
Downloads.Release.DisplayName={0}, publié le {1}
Downloads.Release.DisplayNameWithSecurity={0}, publié le {1} (comprend des correctifs de sécurité)
Downloads.Release.ReleaseNotesLink=<a href="{0}">Notes de sortie</a>
Downloads.Sdk.DisplayName={0}
Downloads.Unknown=???
Downloads.Version.DisplayName={0} - {1}
Downloads.Version.DisplayNameWithDate={0} - {1} (fin du soutien: {2})
Downloads.Version.Status.Current=Courant
Downloads.Version.Status.EOL=Fin de vie
Downloads.Version.Status.LTS=Soutien à long terme
Downloads.Version.Status.Maintenance=Entretien
Downloads.Version.Status.Preview=Aperçu
Downloads.Version.Status.Unknown=Statut inconnu

# Data: Framework Monikers
Framework.Invalid=«{0}» n’est pas un surnom de framework .NET valide
Framework.LoadFailed=Échec à charger les surnoms de framework .NET.
Framework.NoData=Aucun surnom de framework .NET trouvé.

# Data: Runtime Identifiers
Runtime.Invalid=«{0}» n’est pas un identifiant de runtime .NET valide
Runtime.LoadFailed=Échec à charger le catalogue RID.
Runtime.NoData=Le catalogue RID est vide.
