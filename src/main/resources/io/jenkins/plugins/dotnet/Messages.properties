# Console Output Scanner
DiagnosticScanner.CompletionMessage=.NET Command Completed - <!>Exit Code: {0}
DiagnosticScanner.CompletionMessageFailed=Failed to write command completion message

# Base Builder Class
DotNet.DefaultSDK=(Default)
DotNet.ExecutionFailed=Command execution failed
DotNet.MoreOptions=More Options
DotNet.NoWorkspace=No workspace available
DotNet.Verbosity.Default=(Default)
DotNet.Verbosity.Quiet=Quiet (q)
DotNet.Verbosity.Minimal=Minimal (m)
DotNet.Verbosity.Normal=Normal (n)
DotNet.Verbosity.Detailed=Detailed (d)
DotNet.Verbosity.Diagnostic=Diagnostic (diag)

# Builder: Build Project
DotNetBuild.DisplayName=.NET: Build project (build)

# Builder: Clean Project Output
DotNetClean.DisplayName=.NET: Clean project output (clean)

# Builder: Show Package Dependencies
DotNetListPackage.DisplayName=.NET: Show dependencies (list package)
DotNetListPackage.EitherDeprecatedOrOutdated=Cannot show deprecated and outdated packages at the same time
DotNetListPackage.OnlyForPackageUpdateSearch=This setting is only used when showing deprecated or outdated packages

# Builder: Create Package
DotNetPack.DisplayName=.NET: Create NuGet package (pack)

# Builder: Publish
DotNetPublish.DisplayName=.NET: Publish project (publish)
DotNetPublish.No=No
DotNetPublish.ProjectDefault=(Project Default)
DotNetPublish.Yes=Yes

# Builder: Restore Project Dependencies
DotNetRestore.DisplayName=.NET: Restore project dependencies (restore)

# Global Tool: .NET SDK
DotNetSDK.DisplayName=.NET SDK
DotNetSDK.GlobalJson.CreationDone=Created "global.json" to force exact version "{1}" for .NET SDK "{0}".
DotNetSDK.GlobalJson.CreationFailed=Failed to create "global.json" to force exact version "{1}" for .NET SDK "{0}": {2}
DotNetSDK.GlobalJson.DeletionDone=Deleted "{0}".
DotNetSDK.GlobalJson.DeletionFailed=Failed to delete "{0}": {1}
DotNetSDK.GlobalJson.MultiSdk=The home directory contains multiple SDK trees (including "{0}" and "{1}").
DotNetSDK.GlobalJson.NoHome=No home directory is available.
DotNetSDK.GlobalJson.NoSdk=The home directory has no "sdk" subdirectory.
DotNetSDK.GlobalJson.NoVersion=Could not determine the exact version for .NET SDK "{0}": {1}
DotNetSDK.Home.NoExecutable=No "dotnet" executable present
DotNetSDK.Home.NotExecutable=A "dotnet" executable is present but cannot be executed
DotNetSDK.Home.NoSdkSubdir=No "sdk" subdirectory present
DotNetSDK.Home.NoSharedNetCoreSubdir=No "shared/Microsoft.NETCore.App" subdirectory present
DotNetSDK.NoExecutable=Could not find the "{1}" executable for .NET SDK "{0}"
DotNetSDK.NoHome=No home directory is available for .NET SDK "{0}"
DotNetSDK.NoNode=Could not find the "dotnet" executable because the node seems to be offline
DotNetSDK.UnknownSDK=No .NET SDK found with name "{0}"

# Tool Installer: .NET SDK Installer
DotNetSDKInstaller.DisplayName=Install from microsoft.com
DotNetSDKInstaller.Installing=Downloading and extracting {0} into {1} on {2}...
DotNetSDKInstaller.InvalidPlatform=Not a valid platform for SDK {2} of {0}, release {1}
DotNetSDKInstaller.InvalidRelease="{0}" is not a valid release for {1}
DotNetSDKInstaller.InvalidSdk="{0}" is not a valid SDK for {1}, release {2}
DotNetSDKInstaller.InvalidVersion="{0}" is not a valid .NET version
DotNetSDKInstaller.NotSelected=(Not Selected)
DotNetSDKInstaller.ReleaseRequired=Select a release first
DotNetSDKInstaller.Required=A selection is required
DotNetSDKInstaller.SdkRequired=Select an SDK first
DotNetSDKInstaller.VersionRequired=Select a version first

# Builder: Run Tests
DotNetTest.BadRunSettings=Failed to load configured RunSettings arguments.
DotNetTest.DisplayName=.NET: Run unit tests (test)
DotNetTest.InvalidRunSettings=Incorrect specification of RunSettings arguments

# Base Builder: MSBuild
DotNetUsingMSBuild.BadProperties=Failed to load configured MSBuild properties.
DotNetUsingMSBuild.InvalidProperties=Incorrect specification of MSBuild properties

# Build Wrappper
DotNetWrapper.DisplayName=With .NET
DotNetWrapper.NoSDK=No .NET SDK specified

# Data: Downloads
Downloads.Package.DirectDownloadLink=<a href="{0}">Direct Download</a>
Downloads.Package.DisplayName={0} ({1})
Downloads.Release.DisplayName={0}, released {1}
Downloads.Release.DisplayNameWithSecurity={0}, released {1} (includes security fixes)
Downloads.Release.ReleaseNotesLink=<a href="{0}">Release Notes</a>
Downloads.Sdk.DisplayName={0}
Downloads.Unknown=???
Downloads.Version.DisplayName={0} - {1}
Downloads.Version.DisplayNameWithDate={0} - {1} (end of support: {2})
Downloads.Version.Status.Current=Current
Downloads.Version.Status.EOL=End of Life
Downloads.Version.Status.LTS=Long-Term Support
Downloads.Version.Status.Maintenance=Maintenance
Downloads.Version.Status.Preview=Preview
Downloads.Version.Status.Unknown=Status Unknown

# Data: Framework Monikers
Framework.Invalid="{0}" is not a valid .NET framework moniker
Framework.LoadFailed=Failed to load the .NET framework monikers.
Framework.NoData=No .NET framework monikers found.

# Data: Runtime Identifiers
Runtime.Invalid="{0}" is not a valid .NET runtime identifier
Runtime.LoadFailed=Failed to load RID catalog.
Runtime.NoData=RID catalog is empty.
