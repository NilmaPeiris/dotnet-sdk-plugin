# Base Builder Class
DotNet.CompletionMessageFailed=Failed to write command completion message
DotNet.DefaultSDK=(Default)
DotNet.ExecutionFailed=Command execution failed
DotNet.MoreOptions=More Options
DotNet.NoWorkspace=No workspace available
DotNet.ScriptCreationFailed=Failed to create command script
DotNet.ScriptDeletionFailed=Failed to delete command script ({0})
DotNet.Verbosity.Default=(Default)
DotNet.Verbosity.Quiet=Quiet (q)
DotNet.Verbosity.Minimal=Minimal (m)
DotNet.Verbosity.Normal=Normal (n)
DotNet.Verbosity.Detailed=Detailed (d)
DotNet.Verbosity.Diagnostic=Diagnostic (diag)

# Builder: Build Project
DotNetBuild.DisplayName=.NET: Build project (build)

# Builder: Clean Project Output
DotNetClean.DisplayName=.NET: Clean project output (clean)

# Builder: Show Package Dependencies
DotNetListPackage.DisplayName=.NET: Show dependencies (list package)

# Builder: Create Package
DotNetPack.DisplayName=.NET: Create NuGet package (pack)

# Builder: Restore Project Dependencies
DotNetRestore.DisplayName=.NET: Restore project dependencies (restore)

# Global Tool: .NET SDK
DotNetSDK.DisplayName=.NET SDK
DotNetSDK.ExecutableNotFound=Could not find the dotnet executable for SDK "{0}"
DotNetSDK.NoNode=Could not find the dotnet executable because the node seems to be offline
DotNetSDK.UnknownSDK=No .NET SDK found with name "{0}"

# Tool Installer: .NET SDK Installer
DotNetSDKInstaller.DisplayName=Install from microsoft.com
DotNetSDKInstaller.Installing=Downloading and extracting {0} into {1} on {2}...
DotNetSDKInstaller.InvalidPackage=Not a valid installation package for SDK {2} of {0}, release {1}
DotNetSDKInstaller.InvalidRelease="{0}" is not a valid release for {1}
DotNetSDKInstaller.InvalidSdk="{0}" is not a valid SDK for {1}, release {2}
DotNetSDKInstaller.InvalidVersion="{0}" is not a valid .NET version
DotNetSDKInstaller.NotSelected=(Not Selected)
DotNetSDKInstaller.ReleaseRequired=Select a release first
DotNetSDKInstaller.Required=A selection is required
DotNetSDKInstaller.SdkRequired=Select an SDK first
DotNetSDKInstaller.VersionRequired=Select a version first

# Builder: Run Tests
DotNetTest.DisplayName=.NET: Run unit tests (test)

# Build Wrappper
DotNetWrapper.DisplayName=With .NET
DotNetWrapper.NoSDK=No .NET SDK specified

# Data: Downloads
Downloads.Package.DisplayName={0} ({1})
Downloads.Release.DisplayName={0} - Released {1}
Downloads.Release.DisplayNameWithSecurity={0} - released {1} (includes security fixes)
Downloads.Sdk.DisplayName={0} - For Visual Studio {1}
Downloads.Unknown=???
Downloads.Version.DisplayName={0} - {1}
Downloads.Version.DisplayNameWithDate={0} - {1} (End of Support: {2})
Downloads.Version.Status.Current=Current
Downloads.Version.Status.EndOfLife=End of Life
Downloads.Version.Status.LTS=Long-Term Support
Downloads.Version.Status.Maintenance=Maintenance
Downloads.Version.Status.Preview=Preview
Downloads.Version.Status.Unknown=Status Unknown
