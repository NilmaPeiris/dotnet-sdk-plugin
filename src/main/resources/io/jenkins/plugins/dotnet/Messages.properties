# Base Builder Class
DotNet.DefaultSDK=(Default)
DotNet.ExecutionFailed=Command execution failed
DotNet.NoWorkspace=No workspace available
DotNet.ScriptCreationFailed=Failed to create command script
DotNet.ScriptDeletionFailed=Failed to delete command script ({0})
DotNet.ToolConfigurationNeeded=; consider defining .NET SDKs as global tools in Jenkins
DotNet.ToolSelectionNeeded=; consider selecting a specific .NET SDK to use
DotNet.Verbosity.Quiet=Quiet (q)
DotNet.Verbosity.Minimal=Minimal (m)
DotNet.Verbosity.Normal=Normal (n)
DotNet.Verbosity.Detailed=Detailed (d)
DotNet.Verbosity.Diagnostic=Diagnostic (diag)

# Builder: Build Project
DotNetBuild.DisplayName=.NET: Build project (build)

# Builder: Clean Project Output
DotNetClean.DisplayName=.NET: Clean project output (clean)

# Builder: Show Package Dependencies
DotNetListPackage.DisplayName=.NET: Show dependencies (list package)

# Builder: Create Package
DotNetPack.DisplayName=.NET: Create NuGet package (pack)

# Builder: Restore Project Dependencies
DotNetRestore.DisplayName=.NET: Restore project dependencies (restore)

# Global Tool: .NET SDK
DotNetSDK.DisplayName=.NET SDK
DotNetSDK.ExecutableNotFound=Could not find the dotnet executable for SDK ‘{0}’
DotNetSDK.NoNode=Could not find the dotnet executable because the node seems to be offline
DotNetSDK.UnknownSDK=No .NET SDK found with name ‘{0}’

# Builder: Run Tests
DotNetTest.DisplayName=.NET: Run unit tests (test)

# Build Wrappper
DotNetWrapper.DisplayName=With .NET
DotNetWrapper.NoSDK=No .NET SDK specified
