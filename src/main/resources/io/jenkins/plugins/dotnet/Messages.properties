# Base Builder Class
DotNet.DefaultSDK=(Default)
DotNet.ExecutionFailed=Command execution failed
DotNet.NoWorkspace=No workspace available
DotNet.ToolConfigurationNeeded=; consider defining .NET SDKs as global tools in Jenkins
DotNet.ToolSelectionNeeded=; consider selecting a specific .NET SDK to use
DotNet.Verbosity.Quiet=Quiet (q)
DotNet.Verbosity.Minimal=Minimal (m)
DotNet.Verbosity.Normal=Normal (n)
DotNet.Verbosity.Detailed=Detailed (d)
DotNet.Verbosity.Diagnostic=Diagnostic (diag)

# Builder: Build Project
DotNetBuild.DisplayName=Build Project (.NET)

# Builder: Clean Project Output
DotNetClean.DisplayName=Clean Project Output (.NET)

# Console Note: Error
DotNetError.DisplayName=.NET Error

# Builder: Create Package
DotNetPack.DisplayName=Create NuGet Package (.NET)

# Global Tool: .NET SDK
DotNetSDK.DisplayName=.NET SDK
DotNetSDK.ExecutableNotFound=Could not find the dotnet executable for SDK ‘{0}’
DotNetSDK.NoNode=Could not find the dotnet executable because the node seems to be offline
DotNetSDK.UnknownSDK=No .NET SDK found with name ‘{0}’

# Builder: Run Tests
DotNetTest.DisplayName=Run Unit Tests (.NET)

# Console Note: Warning
DotNetWarning.DisplayName=.NET Warning

# Build Wrappper
DotNetWrapper.DisplayName=With .NET
DotNetWrapper.NoSDK=No .NET SDK specified
